apply plugin: 'com.android.application'
// jacoco android application
apply from: rootProject.file("gradle/jacoco/jacoco-android-application.gradle")
//apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION as int
    //    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.sinlov.android.plugin.demo"
        // Specifies the application ID for the test APK.
//        testApplicationId "com.sinlov.android.plugin.demo.test"
        minSdkVersion ANDROID_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
//        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Android Studio 3.6
//    viewBinding {
//        enabled = true
//    }
//    dataBinding{
//        enabled = true
//    }
    // Android Studio 4.0
//    buildFeatures {
//        viewBinding = true
//        dataBinding = true
//    }

    lintOptions {
//        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        checkReleaseBuilds false
        // for androidx close warning
        disable 'GoogleAppIndexingWarning'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding "UTF-8"
    }

    signingConfigs {
        keyBuild {
            storeFile file(project.hasProperty('KEY_BUILD_STOREFILE') ? KEY_1_STOREFILE : '../keystore/debug.keystore')
            storePassword project.hasProperty('KEY_BUILD_STOREPASS') ? KEY_1_STOREPASS : 'android'
            keyAlias project.hasProperty('KEY_BUILD_KEYALIAS') ? KEY_1_KEYALIAS : 'android'
            keyPassword project.hasProperty('KEY_BUILD_KEYPASS') ? KEY_1_KEYPASS : 'android'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            // https://developer.android.com/studio/test
            all {
                // Sets JVM argument(s) for the test JVM(s).
                jvmArgs '-XX:MaxPermSize=256m'
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.keyBuild
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.keyBuild
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // test start
    // Junit
    testImplementation test_depends.junit,
            // Mockito
            test_depends.mockito_core,
            // Robolectric
            test_depends.robolectric,
            test_depends.androidx_test_core,
            // deprecated
//            test_depends.robolectric_shadows_support_v4,
            // EasyMock
            test_depends.easymock,
            // PowerMock
            test_depends.powermock_core,
            test_depends.powermock_module_junit4,
            // PowerMock + EasyMock extension
            test_depends.powermock_api_easymock

    androidTestImplementation android_test_depends.androidx_test_ext_junit,
            android_test_depends.androidx_test_espresso_espresso_core

    //    androidTestImplementation android_test_depends.robotium_solo
    // test end

    debugImplementation depends_debug.com_hjq_logcat // logcat window https://github.com/getActivity/Logcat

    // butter knife only for module test!
//    implementation depends.butterknife
//    annotationProcessor apt_compiler.butterknife_compiler

    // implementation base
    implementation depends.com_hjq_toast
    implementation depends.com_hjq_xxpermissions
    implementation depends_android_x.androidx_legacy_support_v4,
            depends_android_x.androidx_appcompat,
//            depends_android_x.androidx_recyclerview,
//            depends_android_x.androidx_cardview,
//            depends_android_x.com_google_android_material_material,
            depends_android_x.androidx_annotation

    // TODO load module
    if (isReleaseBuild()) {
        //todo release depends
//        implementation ''
    } else {
//     implementation project(':plugin')
    }

}

